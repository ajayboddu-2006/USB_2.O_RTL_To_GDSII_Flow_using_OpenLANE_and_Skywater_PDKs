
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: ./designs/usb/src/usb2p0_core.v
Parsing SystemVerilog input from `./designs/usb/src/usb2p0_core.v' to AST representation.
Generating RTLIL representation for module `\usb'.
Generating RTLIL representation for module `\usb_ep'.
Generating RTLIL representation for module `\usb_ep_banked'.
Generating RTLIL representation for module `\usb_recv_sm'.
Generating RTLIL representation for module `\usb_recv'.
Generating RTLIL representation for module `\usb_tx'.
Generating RTLIL representation for module `\usb_crc5'.
Generating RTLIL representation for module `\usb_crc16'.
Generating RTLIL representation for module `\usb_clk_recovery'.
Generating RTLIL representation for module `\usb_bit_destuff'.
Generating RTLIL representation for module `\usb_sync_detect'.
Generating RTLIL representation for module `\usb_reset_detect'.
Generating RTLIL representation for module `\multisample3'.
Note: Assuming pure combinatorial block at ./designs/usb/src/usb2p0_core.v:1223.1-1234.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\multisample5'.
Note: Assuming pure combinatorial block at ./designs/usb/src/usb2p0_core.v:1251.1-1286.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\nrzi_decode'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openLANE_flow/designs/usb/runs/28-01_06-18/tmp/synthesis/hierarchy.dot'.
Dumping module usb to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \usb
Used module:     \usb_tx
Used module:         \usb_crc16
Used module:     \usb_recv
Used module:         \usb_recv_sm
Used module:             \usb_crc5
Used module:         \usb_sync_detect
Used module:         \usb_reset_detect
Used module:         \usb_bit_destuff
Used module:         \nrzi_decode
Used module:         \usb_clk_recovery
Used module:         \multisample5
Used module:         \multisample3

3.2. Analyzing design hierarchy..
Top module:  \usb
Used module:     \usb_tx
Used module:         \usb_crc16
Used module:     \usb_recv
Used module:         \usb_recv_sm
Used module:             \usb_crc5
Used module:         \usb_sync_detect
Used module:         \usb_reset_detect
Used module:         \usb_bit_destuff
Used module:         \nrzi_decode
Used module:         \usb_clk_recovery
Used module:         \multisample5
Used module:         \multisample3
Removing unused module `\usb_ep_banked'.
Removing unused module `\usb_ep'.
Removed 2 unused modules.

4. Executing TRIBUF pass.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \usb
Used module:     \usb_tx
Used module:         \usb_crc16
Used module:     \usb_recv
Used module:         \usb_recv_sm
Used module:             \usb_crc5
Used module:         \usb_sync_detect
Used module:         \usb_reset_detect
Used module:         \usb_bit_destuff
Used module:         \nrzi_decode
Used module:         \usb_clk_recovery
Used module:         \multisample5
Used module:         \multisample3

5.1.2. Analyzing design hierarchy..
Top module:  \usb
Used module:     \usb_tx
Used module:         \usb_crc16
Used module:     \usb_recv
Used module:         \usb_recv_sm
Used module:             \usb_crc5
Used module:         \usb_sync_detect
Used module:         \usb_reset_detect
Used module:         \usb_bit_destuff
Used module:         \nrzi_decode
Used module:         \usb_clk_recovery
Used module:         \multisample5
Used module:         \multisample3
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$./designs/usb/src/usb2p0_core.v:1223$227 in module multisample3.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1223$227 in module multisample3.
Marked 2 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1201$223 in module usb_reset_detect.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1181$219 in module usb_sync_detect.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1158$212 in module usb_bit_destuff.
Marked 2 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1131$206 in module usb_clk_recovery.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1108$203 in module usb_crc16.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1101$198 in module usb_crc16.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1073$195 in module usb_crc5.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1066$192 in module usb_crc5.
Marked 2 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1020$169 in module usb_tx.
Marked 2 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1004$166 in module usb_tx.
Marked 3 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:962$162 in module usb_tx.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:927$143 in module usb_tx.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:844$135 in module usb_recv.
Marked 6 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:746$128 in module usb_recv_sm.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:703$123 in module usb_recv_sm.
Removed 1 dead cases from process $proc$./designs/usb/src/usb2p0_core.v:1251$229 in module multisample5.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:1251$229 in module multisample5.
Marked 12 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:160$5 in module usb.
Marked 1 switch rules as full_case in process $proc$./designs/usb/src/usb2p0_core.v:113$1 in module usb.
Removed a total of 2 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 7 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_n in `\usb_reset_detect.$proc$./designs/usb/src/usb2p0_core.v:1201$223'.
Found async reset \rst_n in `\usb_sync_detect.$proc$./designs/usb/src/usb2p0_core.v:1181$219'.
Found async reset \rst_n in `\usb_bit_destuff.$proc$./designs/usb/src/usb2p0_core.v:1158$212'.
Found async reset \rst_n in `\usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
Found async reset \rst_n in `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1108$203'.
Found async reset \rst_n in `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1073$195'.
Found async reset \rst_n in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1020$169'.
Found async reset \rst_n in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:962$162'.
Found async reset \rst_n in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:927$143'.
Found async reset \rst_n in `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
Found async reset \rst_n in `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.

5.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\multisample3.$proc$./designs/usb/src/usb2p0_core.v:1236$228'.
Creating decoders for process `\multisample3.$proc$./designs/usb/src/usb2p0_core.v:1223$227'.
     1/1: $1\out[0:0]
Creating decoders for process `\usb_reset_detect.$proc$./designs/usb/src/usb2p0_core.v:1201$223'.
     1/1: $0\cntr[18:0]
Creating decoders for process `\usb_sync_detect.$proc$./designs/usb/src/usb2p0_core.v:1181$219'.
     1/1: $0\data[6:0]
Creating decoders for process `\usb_bit_destuff.$proc$./designs/usb/src/usb2p0_core.v:1158$212'.
     1/1: $0\data[6:0]
Creating decoders for process `\usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
     1/2: $0\cntr[1:0]
     2/2: $0\prev_i[0:0]
Creating decoders for process `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1108$203'.
     1/1: $0\r[15:0]
Creating decoders for process `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1101$198'.
     1/1: $1\next[15:0]
Creating decoders for process `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1073$195'.
     1/1: $0\r[4:0]
Creating decoders for process `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1066$192'.
     1/1: $1\next[4:0]
Creating decoders for process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1033$185'.
     1/1: $0\last_j[0:0]
Creating decoders for process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1020$169'.
     1/1: $0\bit_stuff_counter[2:0]
Creating decoders for process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1004$166'.
     1/2: $0\crc_enabled[0:0]
     2/2: $0\tx_data[8:0]
Creating decoders for process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:962$162'.
     1/1: $0\state[2:0]
Creating decoders for process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:927$143'.
     1/1: $0\tx_clock[1:0]
Creating decoders for process `\usb_recv.$proc$./designs/usb/src/usb2p0_core.v:844$135'.
     1/1: $0\short_idle_counter[2:0]
Creating decoders for process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
     1/7: $0\clear_shift[0:0]
     2/7: $0\xcrc16_ok[0:0]
     3/7: $0\xcrc5_ok[0:0]
     4/7: $0\xdatastrobe[0:0]
     5/7: $0\xdata[7:0]
     6/7: $0\xpid[3:0]
     7/7: $0\state[1:0]
Creating decoders for process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:710$124'.
     1/1: $0\shift_reg[7:0]
Creating decoders for process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:703$123'.
     1/1: $1\next_shift[8:0]
Creating decoders for process `\nrzi_decode.$proc$./designs/usb/src/usb2p0_core.v:1305$232'.
     1/1: $0\prev_i[0:0]
Creating decoders for process `\multisample5.$proc$./designs/usb/src/usb2p0_core.v:1288$230'.
Creating decoders for process `\multisample5.$proc$./designs/usb/src/usb2p0_core.v:1251$229'.
     1/1: $1\out[0:0]
Creating decoders for process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
     1/12: $0\tx_transmit[0:0]
     2/12: $0\data_strobe[0:0]
     3/12: $0\success[0:0]
     4/12: $0\handshake_latch[1:0]
     5/12: $0\token_timeout[6:0]
     6/12: $0\state[2:0]
     7/12: $0\tx_enable_crc16[0:0]
     8/12: $0\tx_data[7:0]
     9/12: $0\setup[0:0]
    10/12: $0\direction_in[0:0]
    11/12: $0\endpoint[3:0]
    12/12: $0\transaction_active[0:0]
Creating decoders for process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
     1/5: $0\recv_queue_1_valid[0:0]
     2/5: $0\recv_queue_0_valid[0:0]
     3/5: $0\recv_queue_1[7:0]
     4/5: $0\recv_queue_0[7:0]
     5/5: $0\data_out[7:0]

5.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\multisample3.\out' from process `\multisample3.$proc$./designs/usb/src/usb2p0_core.v:1223$227'.
No latch inferred for signal `\usb_crc16.\next' from process `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1101$198'.
No latch inferred for signal `\usb_crc5.\next' from process `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1066$192'.
No latch inferred for signal `\usb_recv_sm.\next_shift' from process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:703$123'.
No latch inferred for signal `\multisample5.\out' from process `\multisample5.$proc$./designs/usb/src/usb2p0_core.v:1251$229'.

5.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\multisample3.\r' using process `\multisample3.$proc$./designs/usb/src/usb2p0_core.v:1236$228'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `\usb_reset_detect.\cntr' using process `\usb_reset_detect.$proc$./designs/usb/src/usb2p0_core.v:1201$223'.
  created $adff cell `$procdff$833' with positive edge clock and negative level reset.
Creating register for signal `\usb_sync_detect.\data' using process `\usb_sync_detect.$proc$./designs/usb/src/usb2p0_core.v:1181$219'.
  created $adff cell `$procdff$834' with positive edge clock and negative level reset.
Creating register for signal `\usb_bit_destuff.\data' using process `\usb_bit_destuff.$proc$./designs/usb/src/usb2p0_core.v:1158$212'.
  created $adff cell `$procdff$835' with positive edge clock and negative level reset.
Creating register for signal `\usb_clk_recovery.\cntr' using process `\usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
  created $adff cell `$procdff$836' with positive edge clock and negative level reset.
Creating register for signal `\usb_clk_recovery.\prev_i' using process `\usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
  created $adff cell `$procdff$837' with positive edge clock and negative level reset.
Creating register for signal `\usb_crc16.\r' using process `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1108$203'.
  created $adff cell `$procdff$838' with positive edge clock and negative level reset.
Creating register for signal `\usb_crc5.\r' using process `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1073$195'.
  created $adff cell `$procdff$839' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\last_j' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1033$185'.
  created $dff cell `$procdff$840' with positive edge clock.
Creating register for signal `\usb_tx.\bit_stuff_counter' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1020$169'.
  created $adff cell `$procdff$841' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\tx_data' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1004$166'.
  created $dff cell `$procdff$842' with positive edge clock.
Creating register for signal `\usb_tx.\crc_enabled' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1004$166'.
  created $dff cell `$procdff$843' with positive edge clock.
Creating register for signal `\usb_tx.\state' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:962$162'.
  created $adff cell `$procdff$844' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\tx_clock' using process `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:927$143'.
  created $adff cell `$procdff$845' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv.\short_idle_counter' using process `\usb_recv.$proc$./designs/usb/src/usb2p0_core.v:844$135'.
  created $dff cell `$procdff$846' with positive edge clock.
Creating register for signal `\usb_recv_sm.\state' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$847' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xpid' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$848' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xdata' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$849' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xdatastrobe' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$850' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xcrc5_ok' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$851' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xcrc16_ok' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$852' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\clear_shift' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
  created $adff cell `$procdff$853' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\shift_reg' using process `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:710$124'.
  created $dff cell `$procdff$854' with positive edge clock.
Creating register for signal `\nrzi_decode.\prev_i' using process `\nrzi_decode.$proc$./designs/usb/src/usb2p0_core.v:1305$232'.
  created $dff cell `$procdff$855' with positive edge clock.
Creating register for signal `\multisample5.\r' using process `\multisample5.$proc$./designs/usb/src/usb2p0_core.v:1288$230'.
  created $dff cell `$procdff$856' with positive edge clock.
Creating register for signal `\usb.\transaction_active' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$857' with positive edge clock and negative level reset.
Creating register for signal `\usb.\endpoint' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$858' with positive edge clock and negative level reset.
Creating register for signal `\usb.\direction_in' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$859' with positive edge clock and negative level reset.
Creating register for signal `\usb.\setup' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$860' with positive edge clock and negative level reset.
Creating register for signal `\usb.\data_strobe' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$861' with positive edge clock and negative level reset.
Creating register for signal `\usb.\success' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$862' with positive edge clock and negative level reset.
Creating register for signal `\usb.\tx_transmit' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$863' with positive edge clock and negative level reset.
Creating register for signal `\usb.\tx_data' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `\usb.\tx_enable_crc16' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$865' with positive edge clock and negative level reset.
Creating register for signal `\usb.\state' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$866' with positive edge clock and negative level reset.
Creating register for signal `\usb.\token_timeout' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$867' with positive edge clock and negative level reset.
Creating register for signal `\usb.\handshake_latch' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
  created $adff cell `$procdff$868' with positive edge clock and negative level reset.
Creating register for signal `\usb.\data_out' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\usb.\recv_queue_0' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\usb.\recv_queue_1' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\usb.\recv_queue_0_valid' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `\usb.\recv_queue_1_valid' using process `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
  created $dff cell `$procdff$873' with positive edge clock.

5.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `multisample3.$proc$./designs/usb/src/usb2p0_core.v:1236$228'.
Found and cleaned up 1 empty switch in `\multisample3.$proc$./designs/usb/src/usb2p0_core.v:1223$227'.
Removing empty process `multisample3.$proc$./designs/usb/src/usb2p0_core.v:1223$227'.
Found and cleaned up 2 empty switches in `\usb_reset_detect.$proc$./designs/usb/src/usb2p0_core.v:1201$223'.
Removing empty process `usb_reset_detect.$proc$./designs/usb/src/usb2p0_core.v:1201$223'.
Found and cleaned up 1 empty switch in `\usb_sync_detect.$proc$./designs/usb/src/usb2p0_core.v:1181$219'.
Removing empty process `usb_sync_detect.$proc$./designs/usb/src/usb2p0_core.v:1181$219'.
Found and cleaned up 1 empty switch in `\usb_bit_destuff.$proc$./designs/usb/src/usb2p0_core.v:1158$212'.
Removing empty process `usb_bit_destuff.$proc$./designs/usb/src/usb2p0_core.v:1158$212'.
Found and cleaned up 1 empty switch in `\usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
Removing empty process `usb_clk_recovery.$proc$./designs/usb/src/usb2p0_core.v:1131$206'.
Found and cleaned up 1 empty switch in `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1108$203'.
Removing empty process `usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1108$203'.
Found and cleaned up 1 empty switch in `\usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1101$198'.
Removing empty process `usb_crc16.$proc$./designs/usb/src/usb2p0_core.v:1101$198'.
Found and cleaned up 1 empty switch in `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1073$195'.
Removing empty process `usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1073$195'.
Found and cleaned up 1 empty switch in `\usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1066$192'.
Removing empty process `usb_crc5.$proc$./designs/usb/src/usb2p0_core.v:1066$192'.
Found and cleaned up 1 empty switch in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1033$185'.
Removing empty process `usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1033$185'.
Found and cleaned up 2 empty switches in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1020$169'.
Removing empty process `usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1020$169'.
Found and cleaned up 3 empty switches in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1004$166'.
Removing empty process `usb_tx.$proc$./designs/usb/src/usb2p0_core.v:1004$166'.
Found and cleaned up 8 empty switches in `\usb_tx.$proc$./designs/usb/src/usb2p0_core.v:962$162'.
Removing empty process `usb_tx.$proc$./designs/usb/src/usb2p0_core.v:962$162'.
Removing empty process `usb_tx.$proc$./designs/usb/src/usb2p0_core.v:927$143'.
Found and cleaned up 2 empty switches in `\usb_recv.$proc$./designs/usb/src/usb2p0_core.v:844$135'.
Removing empty process `usb_recv.$proc$./designs/usb/src/usb2p0_core.v:844$135'.
Found and cleaned up 9 empty switches in `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
Removing empty process `usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:746$128'.
Found and cleaned up 1 empty switch in `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:710$124'.
Removing empty process `usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:710$124'.
Found and cleaned up 1 empty switch in `\usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:703$123'.
Removing empty process `usb_recv_sm.$proc$./designs/usb/src/usb2p0_core.v:703$123'.
Found and cleaned up 1 empty switch in `\nrzi_decode.$proc$./designs/usb/src/usb2p0_core.v:1305$232'.
Removing empty process `nrzi_decode.$proc$./designs/usb/src/usb2p0_core.v:1305$232'.
Removing empty process `multisample5.$proc$./designs/usb/src/usb2p0_core.v:1288$230'.
Found and cleaned up 1 empty switch in `\multisample5.$proc$./designs/usb/src/usb2p0_core.v:1251$229'.
Removing empty process `multisample5.$proc$./designs/usb/src/usb2p0_core.v:1251$229'.
Found and cleaned up 32 empty switches in `\usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
Removing empty process `usb.$proc$./designs/usb/src/usb2p0_core.v:160$5'.
Found and cleaned up 2 empty switches in `\usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
Removing empty process `usb.$proc$./designs/usb/src/usb2p0_core.v:113$1'.
Cleaned up 73 empty switches.

5.3. Executing FLATTEN pass (flatten design).
Deleting now unused module multisample3.
Deleting now unused module usb_reset_detect.
Deleting now unused module usb_sync_detect.
Deleting now unused module usb_bit_destuff.
Deleting now unused module usb_clk_recovery.
Deleting now unused module usb_crc16.
Deleting now unused module usb_crc5.
Deleting now unused module usb_tx.
Deleting now unused module usb_recv.
Deleting now unused module usb_recv_sm.
Deleting now unused module nrzi_decode.
Deleting now unused module multisample5.
<suppressed ~13 debug messages>

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~57 debug messages>

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 20 unused cells and 262 unused wires.
<suppressed ~22 debug messages>

5.6. Executing CHECK pass (checking for obvious problems).
checking module usb..
found and reported 0 problems.

5.7. Executing OPT pass (performing simple optimizations).

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~267 debug messages>
Removed a total of 89 cells.

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
    New ctrl vector for $pmux cell $flatten\recv.\d_filter.$procmux$233: { $auto$opt_reduce.cc:134:opt_mux$877 $auto$opt_reduce.cc:134:opt_mux$875 }
    New ctrl vector for $pmux cell $procmux$478: $auto$opt_reduce.cc:134:opt_mux$879
    New ctrl vector for $pmux cell $flatten\recv.\se0_filter.$procmux$444: { $auto$opt_reduce.cc:134:opt_mux$883 $auto$opt_reduce.cc:134:opt_mux$881 }
    New ctrl vector for $pmux cell $procmux$743: { $procmux$655_CMP $auto$opt_reduce.cc:134:opt_mux$885 }
    New ctrl vector for $pmux cell $procmux$775: { $procmux$578_CMP $procmux$526_CMP $procmux$503_CMP $procmux$535_CMP $auto$opt_reduce.cc:134:opt_mux$887 }
  Optimizing cells in module \usb.
Performed a total of 5 changes.

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.7.6. Executing OPT_DFF pass (perform DFF optimizations).

5.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 91 unused wires.
<suppressed ~1 debug messages>

5.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

5.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
    New ctrl vector for $pmux cell $flatten\recv.\sm.$procmux$420: { $flatten\recv.\sm.$procmux$336_CMP $flatten\recv.\sm.$procmux$333_CMP }
  Optimizing cells in module \usb.
Performed a total of 1 changes.

5.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

5.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.7.23. Finished OPT passes. (There is nothing left to do.)

5.8. Executing FSM pass (extract and optimize FSM).

5.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register usb.recv.sm.state.
Found FSM state register usb.state.
Not marking usb.tx.state as FSM state register:
    Users of register don't seem to benefit from recoding.

5.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\recv.sm.state' from module `\usb'.
  found $adff cell for state register: $flatten\recv.\sm.$procdff$847
  root of input selection tree: $flatten\recv.\sm.$0\state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \recv.strobe
  found ctrl input: $flatten\recv.\sm.$procmux$333_CMP
  found ctrl input: $flatten\recv.\sm.$procmux$336_CMP
  found ctrl input: \recv.se0
  found ctrl input: \recv.sm.next_shift [8]
  found ctrl input: $flatten\recv.\sm.$eq$./designs/usb/src/usb2p0_core.v:772$133_Y
  found state code: 2'10
  found state code: 2'11
  found ctrl input: $flatten\recv.\sm.$logic_and$./designs/usb/src/usb2p0_core.v:762$131_Y
  found state code: 2'01
  found ctrl output: \recv.sm.xpacket
  found ctrl output: $flatten\recv.\sm.$procmux$333_CMP
  found ctrl output: $flatten\recv.\sm.$procmux$336_CMP
  ctrl inputs: { \recv.se0 \recv.strobe $flatten\recv.\sm.$eq$./designs/usb/src/usb2p0_core.v:772$133_Y $flatten\recv.\sm.$logic_and$./designs/usb/src/usb2p0_core.v:762$131_Y \recv.sm.next_shift [8] }
  ctrl outputs: { $flatten\recv.\sm.$procmux$336_CMP $flatten\recv.\sm.$procmux$333_CMP $flatten\recv.\sm.$0\state[1:0] \recv.sm.xpacket }
  transition:       2'00 5'-0--- ->       2'00 5'10000
  transition:       2'00 5'-1-0- ->       2'00 5'10000
  transition:       2'00 5'-1-1- ->       2'01 5'10010
  transition:       2'10 5'-0--- ->       2'10 5'00100
  transition:       2'10 5'01--- ->       2'10 5'00100
  transition:       2'10 5'11--- ->       2'00 5'00000
  transition:       2'01 5'-0--- ->       2'01 5'01010
  transition:       2'01 5'01--0 ->       2'01 5'01010
  transition:       2'01 5'010-1 ->       2'10 5'01100
  transition:       2'01 5'011-1 ->       2'11 5'01110
  transition:       2'01 5'11--- ->       2'00 5'01000
  transition:       2'11 5'-0--- ->       2'11 5'00111
  transition:       2'11 5'01--- ->       2'11 5'00111
  transition:       2'11 5'11--- ->       2'00 5'00001
Extracting FSM `\state' from module `\usb'.
  found $adff cell for state register: $procdff$866
  root of input selection tree: $0\state[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: $procmux$487_CMP
  found ctrl input: $procmux$492_CMP
  found ctrl input: $procmux$535_CMP
  found ctrl input: \tx.send_crc16
  found ctrl input: $procmux$503_CMP
  found ctrl input: $procmux$526_CMP
  found ctrl input: $procmux$578_CMP
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:299$43_Y
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:279$38_Y
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:269$33_Y
  found ctrl input: $eq$./designs/usb/src/usb2p0_core.v:239$26_Y
  found state code: 3'010
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:310$47_Y
  found ctrl input: \recv.sm.xpacket
  found state code: 3'110
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:270$36_Y
  found state code: 3'011
  found ctrl input: \data_in_valid
  found ctrl input: $eq$./designs/usb/src/usb2p0_core.v:281$40_Y
  found state code: 3'101
  found ctrl input: $eq$./designs/usb/src/usb2p0_core.v:197$12_Y
  found ctrl input: $eq$./designs/usb/src/usb2p0_core.v:194$11_Y
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:238$24_Y
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:211$23_Y
  found ctrl input: $procmux$655_CMP
  found state code: 3'100
  found ctrl input: \recv.xdatastrobe
  found ctrl input: \recv_queue_1_valid
  found ctrl input: $logic_and$./designs/usb/src/usb2p0_core.v:197$15_Y
  found ctrl input: $eq$./designs/usb/src/usb2p0_core.v:199$16_Y
  found state code: 3'111
  found state code: 3'001
  found ctrl output: \tx.send_crc16
  found ctrl output: $procmux$487_CMP
  found ctrl output: $procmux$492_CMP
  found ctrl output: $procmux$503_CMP
  found ctrl output: $procmux$526_CMP
  found ctrl output: $procmux$535_CMP
  found ctrl output: $procmux$578_CMP
  ctrl inputs: { \recv.xdatastrobe \recv.sm.xpacket $procmux$655_CMP $logic_and$./designs/usb/src/usb2p0_core.v:310$47_Y $logic_and$./designs/usb/src/usb2p0_core.v:299$43_Y $eq$./designs/usb/src/usb2p0_core.v:281$40_Y $logic_and$./designs/usb/src/usb2p0_core.v:279$38_Y $logic_and$./designs/usb/src/usb2p0_core.v:270$36_Y $logic_and$./designs/usb/src/usb2p0_core.v:269$33_Y $eq$./designs/usb/src/usb2p0_core.v:239$26_Y $logic_and$./designs/usb/src/usb2p0_core.v:238$24_Y $logic_and$./designs/usb/src/usb2p0_core.v:211$23_Y $eq$./designs/usb/src/usb2p0_core.v:199$16_Y $logic_and$./designs/usb/src/usb2p0_core.v:197$15_Y $eq$./designs/usb/src/usb2p0_core.v:197$12_Y $eq$./designs/usb/src/usb2p0_core.v:194$11_Y \recv_queue_1_valid \data_in_valid }
  ctrl outputs: { \tx.send_crc16 $procmux$578_CMP $procmux$535_CMP $procmux$526_CMP $procmux$503_CMP $procmux$492_CMP $procmux$487_CMP $0\state[2:0] }
  transition:      3'000 18'-0---------------- ->      3'000 10'0100000000
  transition:      3'000 18'-1-----------0-0-- ->      3'010 10'0100000010
  transition:      3'000 18'-1----------01-0-- ->      3'111 10'0100000111
  transition:      3'000 18'-1----------11-0-- ->      3'001 10'0100000001
  transition:      3'000 18'-1-------------1-- ->      3'001 10'0100000001
  transition:      3'100 18'------0-0--------- ->      3'100 10'0000100100
  transition:      3'100 18'------001--------- ->      3'100 10'0000100100
  transition:      3'100 18'------011--------- ->      3'011 10'0000100011
  transition:      3'100 18'-----01----------0 ->      3'010 10'0000100010
  transition:      3'100 18'-----11----------0 ->      3'101 10'0000100101
  transition:      3'100 18'------1-0--------1 ->      3'100 10'0000100100
  transition:      3'100 18'------101--------1 ->      3'100 10'0000100100
  transition:      3'100 18'------111--------1 ->      3'011 10'0000100011
  transition:      3'010 18'----0------------- ->      3'010 10'0000000010
  transition:      3'010 18'----1------------- ->      3'000 10'0000000000
  transition:      3'110 18'-0-0-------------- ->      3'110 10'0010000110
  transition:      3'110 18'-1-0-------------- ->      3'010 10'0010000010
  transition:      3'110 18'---1-------------- ->      3'000 10'0010000000
  transition:      3'001 18'-0------------00-- ->      3'000 10'0001000000
  transition:      3'001 18'-0---------0---1-- ->      3'000 10'0001000000
  transition:      3'001 18'-00--------1---1-- ->      3'000 10'0001000000
  transition:      3'001 18'-01--------1---1-- ->      3'100 10'0001000100
  transition:      3'001 18'-0--------0---1--- ->      3'000 10'0001000000
  transition:      3'001 18'-0--------1---1--- ->      3'011 10'0001000011
  transition:      3'001 18'01---------------- ->      3'001 10'0001000001
  transition:      3'001 18'11------------00-- ->      3'010 10'0001000010
  transition:      3'001 18'11-------------10- ->      3'001 10'0001000001
  transition:      3'001 18'11-------------11- ->      3'010 10'0001000010
  transition:      3'001 18'11------------1--- ->      3'001 10'0001000001
  transition:      3'101 18'----0------------- ->      3'101 10'1000000101
  transition:      3'101 18'----1------------- ->      3'110 10'1000000110
  transition:      3'011 18'------0-0--------- ->      3'011 10'0000001011
  transition:      3'011 18'------0-10-------- ->      3'011 10'0000001011
  transition:      3'011 18'------0-11-------- ->      3'000 10'0000001000
  transition:      3'011 18'------1----------- ->      3'010 10'0000001010
  transition:      3'111 18'------0----------- ->      3'111 10'0000010111
  transition:      3'111 18'------1----------- ->      3'010 10'0000010010

5.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$893' from module `\usb'.
Optimizing FSM `$fsm$\recv.sm.state$888' from module `\usb'.

5.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 45 unused cells and 45 unused wires.
<suppressed ~46 debug messages>

5.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\recv.sm.state$888' from module `\usb'.
  Removing unused output signal $flatten\recv.\sm.$0\state[1:0] [0].
  Removing unused output signal $flatten\recv.\sm.$0\state[1:0] [1].
Optimizing FSM `$fsm$\state$893' from module `\usb'.
  Removing unused output signal $0\state[2:0] [0].
  Removing unused output signal $0\state[2:0] [1].
  Removing unused output signal $0\state[2:0] [2].

5.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\recv.sm.state$888' from module `\usb' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\state$893' from module `\usb' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------

5.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\recv.sm.state$888' from module `usb':
-------------------------------------

  Information on FSM $fsm$\recv.sm.state$888 (\recv.sm.state):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       4

  Input signals:
    0: \recv.sm.next_shift [8]
    1: $flatten\recv.\sm.$logic_and$./designs/usb/src/usb2p0_core.v:762$131_Y
    2: $flatten\recv.\sm.$eq$./designs/usb/src/usb2p0_core.v:772$133_Y
    3: \recv.strobe
    4: \recv.se0

  Output signals:
    0: \recv.sm.xpacket
    1: $flatten\recv.\sm.$procmux$333_CMP
    2: $flatten\recv.\sm.$procmux$336_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'-1-0-   ->     0 3'100
      1:     0 5'-0---   ->     0 3'100
      2:     0 5'-1-1-   ->     2 3'100
      3:     1 5'11---   ->     0 3'000
      4:     1 5'-0---   ->     1 3'000
      5:     1 5'01---   ->     1 3'000
      6:     2 5'11---   ->     0 3'010
      7:     2 5'010-1   ->     1 3'010
      8:     2 5'01--0   ->     2 3'010
      9:     2 5'-0---   ->     2 3'010
     10:     2 5'011-1   ->     3 3'010
     11:     3 5'11---   ->     0 3'001
     12:     3 5'-0---   ->     3 3'001
     13:     3 5'01---   ->     3 3'001

-------------------------------------

FSM `$fsm$\state$893' from module `usb':
-------------------------------------

  Information on FSM $fsm$\state$893 (\state):

  Number of input signals:   18
  Number of output signals:   7
  Number of state bits:       8

  Input signals:
    0: \data_in_valid
    1: \recv_queue_1_valid
    2: $eq$./designs/usb/src/usb2p0_core.v:194$11_Y
    3: $eq$./designs/usb/src/usb2p0_core.v:197$12_Y
    4: $logic_and$./designs/usb/src/usb2p0_core.v:197$15_Y
    5: $eq$./designs/usb/src/usb2p0_core.v:199$16_Y
    6: $logic_and$./designs/usb/src/usb2p0_core.v:211$23_Y
    7: $logic_and$./designs/usb/src/usb2p0_core.v:238$24_Y
    8: $eq$./designs/usb/src/usb2p0_core.v:239$26_Y
    9: $logic_and$./designs/usb/src/usb2p0_core.v:269$33_Y
   10: $logic_and$./designs/usb/src/usb2p0_core.v:270$36_Y
   11: $logic_and$./designs/usb/src/usb2p0_core.v:279$38_Y
   12: $eq$./designs/usb/src/usb2p0_core.v:281$40_Y
   13: $logic_and$./designs/usb/src/usb2p0_core.v:299$43_Y
   14: $logic_and$./designs/usb/src/usb2p0_core.v:310$47_Y
   15: $procmux$655_CMP
   16: \recv.sm.xpacket
   17: \recv.xdatastrobe

  Output signals:
    0: $procmux$487_CMP
    1: $procmux$492_CMP
    2: $procmux$503_CMP
    3: $procmux$526_CMP
    4: $procmux$535_CMP
    5: $procmux$578_CMP
    6: \tx.send_crc16

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 18'-0----------------   ->     0 7'0100000
      1:     0 18'-1-----------0-0--   ->     2 7'0100000
      2:     0 18'-1----------11-0--   ->     4 7'0100000
      3:     0 18'-1-------------1--   ->     4 7'0100000
      4:     0 18'-1----------01-0--   ->     7 7'0100000
      5:     1 18'------1-0--------1   ->     1 7'0000100
      6:     1 18'------101--------1   ->     1 7'0000100
      7:     1 18'------0-0---------   ->     1 7'0000100
      8:     1 18'------001---------   ->     1 7'0000100
      9:     1 18'-----01----------0   ->     2 7'0000100
     10:     1 18'-----11----------0   ->     5 7'0000100
     11:     1 18'------111--------1   ->     6 7'0000100
     12:     1 18'------011---------   ->     6 7'0000100
     13:     2 18'----1-------------   ->     0 7'0000000
     14:     2 18'----0-------------   ->     2 7'0000000
     15:     3 18'---1--------------   ->     0 7'0010000
     16:     3 18'-1-0--------------   ->     2 7'0010000
     17:     3 18'-0-0--------------   ->     3 7'0010000
     18:     4 18'-0------------00--   ->     0 7'0001000
     19:     4 18'-0---------0---1--   ->     0 7'0001000
     20:     4 18'-00--------1---1--   ->     0 7'0001000
     21:     4 18'-0--------0---1---   ->     0 7'0001000
     22:     4 18'-01--------1---1--   ->     1 7'0001000
     23:     4 18'11-------------11-   ->     2 7'0001000
     24:     4 18'11------------00--   ->     2 7'0001000
     25:     4 18'11-------------10-   ->     4 7'0001000
     26:     4 18'11------------1---   ->     4 7'0001000
     27:     4 18'01----------------   ->     4 7'0001000
     28:     4 18'-0--------1---1---   ->     6 7'0001000
     29:     5 18'----1-------------   ->     3 7'1000000
     30:     5 18'----0-------------   ->     5 7'1000000
     31:     6 18'------0-11--------   ->     0 7'0000001
     32:     6 18'------1-----------   ->     2 7'0000001
     33:     6 18'------0-10--------   ->     6 7'0000001
     34:     6 18'------0-0---------   ->     6 7'0000001
     35:     7 18'------1-----------   ->     2 7'0000010
     36:     7 18'------0-----------   ->     7 7'0000010

-------------------------------------

5.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\recv.sm.state$888' from module `\usb'.
Mapping FSM `$fsm$\state$893' from module `\usb'.

5.9. Executing OPT pass (performing simple optimizations).

5.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~16 debug messages>

5.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

5.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

5.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$873 ($dff) from module usb (D = $procmux$807_Y, Q = \recv_queue_1_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1118 ($sdff) from module usb (D = \recv_queue_0_valid, Q = \recv_queue_1_valid).
Adding SRST signal on $procdff$872 ($dff) from module usb (D = $procmux$812_Y, Q = \recv_queue_0_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1120 ($sdff) from module usb (D = 1'1, Q = \recv_queue_0_valid).
Adding EN signal on $procdff$871 ($dff) from module usb (D = \recv_queue_0, Q = \recv_queue_1).
Adding EN signal on $procdff$870 ($dff) from module usb (D = \recv.sm.xdata, Q = \recv_queue_0).
Adding EN signal on $procdff$869 ($dff) from module usb (D = \recv_queue_1, Q = \data_out).
Adding EN signal on $procdff$865 ($adff) from module usb (D = $procmux$510_Y, Q = \tx_enable_crc16).
Adding EN signal on $procdff$864 ($dff) from module usb (D = $0\tx_data[7:0], Q = \tx_data).
Adding EN signal on $procdff$863 ($adff) from module usb (D = $0\tx_transmit[0:0], Q = \tx_transmit).
Adding EN signal on $procdff$857 ($adff) from module usb (D = $0\transaction_active[0:0], Q = \transaction_active).
Adding EN signal on $flatten\tx.\tx_crc.$procdff$838 ($adff) from module usb (D = \tx.tx_crc.next, Q = \tx.tx_crc.r).
Adding EN signal on $flatten\tx.$procdff$844 ($adff) from module usb (D = $flatten\tx.$procmux$287_Y, Q = \tx.state).
Adding EN signal on $flatten\tx.$procdff$843 ($dff) from module usb (D = $flatten\tx.$procmux$275_Y, Q = \tx.crc_enabled).
Adding SRST signal on $auto$opt_dff.cc:764:run$1195 ($dffe) from module usb (D = $flatten\tx.$procmux$272_Y, Q = \tx.crc_enabled, rval = 1'0).
Adding EN signal on $flatten\tx.$procdff$842 ($dff) from module usb (D = $flatten\tx.$procmux$283_Y, Q = \tx.tx_data).
Adding SRST signal on $auto$opt_dff.cc:764:run$1197 ($dffe) from module usb (D = $flatten\tx.$procmux$280_Y, Q = \tx.tx_data, rval = 9'110000000).
Adding EN signal on $flatten\tx.$procdff$841 ($adff) from module usb (D = $flatten\tx.$procmux$267_Y, Q = \tx.bit_stuff_counter).
Adding EN signal on $flatten\tx.$procdff$840 ($dff) from module usb (D = $flatten\tx.$ternary$./designs/usb/src/usb2p0_core.v:1035$186_Y, Q = \tx.last_j).
Adding SRST signal on $auto$opt_dff.cc:764:run$1200 ($dffe) from module usb (D = \tx.j, Q = \tx.last_j, rval = 1'1).
Adding EN signal on $flatten\recv.\sync_detect.$procdff$834 ($adff) from module usb (D = { \recv.sync_detect.data [5:0] $flatten\recv.\sync_detect.$logic_or$./designs/usb/src/usb2p0_core.v:1185$221_Y }, Q = \recv.sync_detect.data).
Adding EN signal on $flatten\recv.\sm.\crc5.$procdff$839 ($adff) from module usb (D = \recv.sm.crc5.next, Q = \recv.sm.crc5.r).
Adding EN signal on $flatten\recv.\sm.\crc16.$procdff$838 ($adff) from module usb (D = \recv.sm.crc16.next, Q = \recv.sm.crc16.r).
Adding EN signal on $flatten\recv.\sm.$procdff$854 ($dff) from module usb (D = \recv.sm.next_shift [7:0], Q = \recv.sm.shift_reg).
Adding EN signal on $flatten\recv.\sm.$procdff$853 ($adff) from module usb (D = $flatten\recv.\sm.$procmux$322_Y, Q = \recv.sm.clear_shift).
Adding EN signal on $flatten\recv.\sm.$procdff$852 ($adff) from module usb (D = $flatten\recv.\sm.$procmux$345_Y, Q = \recv.sm.xcrc16_ok).
Adding EN signal on $flatten\recv.\sm.$procdff$851 ($adff) from module usb (D = $flatten\recv.\sm.$procmux$365_Y, Q = \recv.sm.xcrc5_ok).
Adding EN signal on $flatten\recv.\sm.$procdff$850 ($adff) from module usb (D = $flatten\recv.\sm.$procmux$385_Y, Q = \recv.sm.xdatastrobe).
Adding EN signal on $flatten\recv.\sm.$procdff$849 ($adff) from module usb (D = { \recv.sm.next_shift [0] \recv.sm.next_shift [1] \recv.sm.next_shift [2] \recv.sm.next_shift [3] \recv.sm.next_shift [4] \recv.sm.next_shift [5] \recv.sm.next_shift [6] \recv.sm.next_shift [7] }, Q = \recv.sm.xdata).
Adding EN signal on $flatten\recv.\sm.$procdff$848 ($adff) from module usb (D = { \recv.sm.next_shift [4] \recv.sm.next_shift [5] \recv.sm.next_shift [6] \recv.sm.next_shift [7] }, Q = \recv.sm.xpid).
Adding EN signal on $flatten\recv.\reset_detect.$procdff$833 ($adff) from module usb (D = $flatten\recv.\reset_detect.$0\cntr[18:0], Q = \recv.reset_detect.cntr).
Adding EN signal on $flatten\recv.\nrzi_decoder.$procdff$855 ($dff) from module usb (D = \recv.clk_rcvr.i, Q = \recv.nrzi_decoder.prev_i).
Adding EN signal on $flatten\recv.\destuffer.$procdff$835 ($adff) from module usb (D = { \recv.destuffer.data [5:0] \recv.destuffer.d }, Q = \recv.destuffer.data).
Adding SRST signal on $flatten\recv.$procdff$846 ($dff) from module usb (D = $flatten\recv.$procmux$311_Y, Q = \recv.short_idle_counter, rval = 3'111).
Adding EN signal on $auto$opt_dff.cc:702:run$1253 ($sdff) from module usb (D = $flatten\recv.$sub$./designs/usb/src/usb2p0_core.v:848$140_Y, Q = \recv.short_idle_counter).

5.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 42 unused cells and 66 unused wires.
<suppressed ~43 debug messages>

5.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~5 debug messages>

5.9.9. Rerunning OPT passes. (Maybe there is more to do..)

5.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

5.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

5.9.13. Executing OPT_DFF pass (perform DFF optimizations).

5.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

5.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.9.16. Rerunning OPT passes. (Maybe there is more to do..)

5.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

5.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.9.20. Executing OPT_DFF pass (perform DFF optimizations).

5.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.9.23. Finished OPT passes. (There is nothing left to do.)

5.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell usb.$eq$./designs/usb/src/usb2p0_core.v:194$11 ($eq).
Removed top 2 bits (of 5) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1135 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$ne$./designs/usb/src/usb2p0_core.v:211$22 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$eq$./designs/usb/src/usb2p0_core.v:239$26 ($eq).
Removed top 1 bits (of 2) from port B of cell usb.$ne$./designs/usb/src/usb2p0_core.v:270$35 ($ne).
Removed top 2 bits (of 4) from port B of cell usb.$eq$./designs/usb/src/usb2p0_core.v:305$44 ($eq).
Removed top 1 bits (of 4) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1006 ($eq).
Removed top 2 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1014 ($eq).
Removed cell usb.$procmux$478 ($mux).
Removed cell usb.$procmux$482 ($mux).
Removed cell usb.$procmux$488 ($mux).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1019 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1105 ($eq).
Removed cell usb.$procmux$556 ($mux).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$981 ($eq).
Removed top 1 bits (of 4) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$922 ($eq).
Removed top 2 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$977 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1097 ($eq).
Removed top 2 bits (of 4) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$973 ($eq).
Removed top 2 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$969 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1093 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$935 ($eq).
Removed cell usb.$procmux$688 ($mux).
Removed cell usb.$procmux$692 ($mux).
Removed cell usb.$procmux$706 ($mux).
Removed cell usb.$procmux$723 ($mux).
Removed cell usb.$procmux$730 ($mux).
Removed top 1 bits (of 2) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$1075 ($eq).
Removed cell usb.$procmux$747 ($mux).
Removed cell usb.$procmux$754 ($mux).
Removed cell usb.$procmux$767 ($mux).
Removed cell usb.$procmux$778 ($mux).
Removed cell usb.$procmux$780 ($mux).
Removed cell usb.$procmux$786 ($mux).
Removed cell usb.$procmux$788 ($mux).
Removed cell usb.$procmux$790 ($mux).
Removed cell usb.$procmux$799 ($mux).
Removed cell usb.$procmux$801 ($mux).
Removed cell usb.$procmux$804 ($mux).
Removed top 1 bits (of 2) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$956 ($eq).
Removed cell usb.$flatten\recv.\sm.$procmux$320 ($mux).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1163 ($ne).
Removed cell usb.$flatten\recv.\sm.$procmux$326 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$331 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$334 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$340 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$343 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$349 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$351 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$354 ($mux).
Removed top 1 bits (of 3) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1161 ($ne).
Removed cell usb.$flatten\recv.\sm.$procmux$360 ($mux).
Removed cell usb.$flatten\recv.\sm.$procmux$363 ($mux).
Removed top 1 bits (of 4) from port B of cell usb.$auto$fsm_map.cc:77:implement_pattern_cache$948 ($eq).
Removed top 2 bits (of 5) from mux cell usb.$flatten\recv.\sm.\crc5.$procmux$262 ($mux).
Removed top 2 bits (of 3) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1150 ($ne).
Removed cell usb.$flatten\recv.\reset_detect.$procmux$243 ($mux).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$461_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$462_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$463_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$464_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$465_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$466_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$467_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$468_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$469_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$470_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$471_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$472_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$473_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$474_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell usb.$flatten\recv.\se0_filter.$procmux$475_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$flatten\recv.\d_filter.$procmux$238_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$flatten\recv.\d_filter.$procmux$239_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell usb.$flatten\recv.\d_filter.$procmux$240_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell usb.$flatten\recv.\sm.\crc5.$eq$./designs/usb/src/usb2p0_core.v:1064$191 ($eq).
Removed top 1 bits (of 7) from port B of cell usb.$flatten\recv.\sync_detect.$eq$./designs/usb/src/usb2p0_core.v:1179$214 ($eq).
Removed top 1 bits (of 7) from port B of cell usb.$flatten\recv.\destuffer.$ne$./designs/usb/src/usb2p0_core.v:1156$210 ($ne).
Removed top 1 bits (of 4) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1212 ($ne).
Removed top 1 bits (of 3) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1210 ($ne).
Removed top 1 bits (of 3) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1208 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1192 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1187 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1185 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1183 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1181 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1167 ($ne).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1139 ($ne).
Removed cell usb.$flatten\tx.$procmux$306 ($mux).
Removed cell usb.$flatten\tx.$procmux$303 ($mux).
Removed top 2 bits (of 3) from port B of cell usb.$flatten\tx.$procmux$302_CMP0 ($eq).
Removed cell usb.$flatten\tx.$procmux$300 ($mux).
Removed cell usb.$flatten\tx.$procmux$294 ($mux).
Removed top 1 bits (of 2) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1141 ($ne).
Removed cell usb.$flatten\tx.$procmux$291 ($mux).
Removed cell usb.$flatten\tx.$procmux$272 ($mux).
Removed top 2 bits (of 4) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1148 ($ne).
Removed top 1 bits (of 3) from port B of cell usb.$flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:957$156 ($eq).
Removed top 1 bits (of 3) from port B of cell usb.$flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:957$155 ($eq).
Removed top 2 bits (of 3) from port B of cell usb.$auto$opt_dff.cc:218:make_patterns_logic$1146 ($ne).

5.11. Executing PEEPOPT pass (run peephole optimizers).

5.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

5.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usb:
  creating $macc model for $flatten\recv.$sub$./designs/usb/src/usb2p0_core.v:848$140 ($sub).
  creating $macc model for $flatten\recv.\clk_rcvr.$sub$./designs/usb/src/usb2p0_core.v:1137$209 ($sub).
  creating $macc model for $flatten\recv.\reset_detect.$sub$./designs/usb/src/usb2p0_core.v:1207$226 ($sub).
  creating $macc model for $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:1027$176 ($add).
  creating $macc model for $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:931$145 ($add).
  creating $macc model for $sub$./designs/usb/src/usb2p0_core.v:176$8 ($sub).
  creating $alu model for $macc $sub$./designs/usb/src/usb2p0_core.v:176$8.
  creating $alu model for $macc $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:931$145.
  creating $alu model for $macc $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:1027$176.
  creating $alu model for $macc $flatten\recv.\reset_detect.$sub$./designs/usb/src/usb2p0_core.v:1207$226.
  creating $alu model for $macc $flatten\recv.\clk_rcvr.$sub$./designs/usb/src/usb2p0_core.v:1137$209.
  creating $alu model for $macc $flatten\recv.$sub$./designs/usb/src/usb2p0_core.v:848$140.
  creating $alu cell for $flatten\recv.$sub$./designs/usb/src/usb2p0_core.v:848$140: $auto$alumacc.cc:485:replace_alu$1255
  creating $alu cell for $flatten\recv.\clk_rcvr.$sub$./designs/usb/src/usb2p0_core.v:1137$209: $auto$alumacc.cc:485:replace_alu$1258
  creating $alu cell for $flatten\recv.\reset_detect.$sub$./designs/usb/src/usb2p0_core.v:1207$226: $auto$alumacc.cc:485:replace_alu$1261
  creating $alu cell for $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:1027$176: $auto$alumacc.cc:485:replace_alu$1264
  creating $alu cell for $flatten\tx.$add$./designs/usb/src/usb2p0_core.v:931$145: $auto$alumacc.cc:485:replace_alu$1267
  creating $alu cell for $sub$./designs/usb/src/usb2p0_core.v:176$8: $auto$alumacc.cc:485:replace_alu$1270
  created 6 $alu and 0 $macc cells.

5.14. Executing SHARE pass (SAT-based resource sharing).

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

5.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
    New ctrl vector for $pmux cell $flatten\tx.$procmux$287: { $auto$opt_reduce.cc:134:opt_mux$1274 $flatten\tx.$procmux$302_CMP $flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:954$149_Y $flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:954$150_Y $flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:957$155_Y $flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:957$156_Y $flatten\tx.$eq$./designs/usb/src/usb2p0_core.v:1032$178_Y }
    New ctrl vector for $pmux cell $procmux$775: { \state [4] $auto$opt_reduce.cc:134:opt_mux$887 }
  Optimizing cells in module \usb.
Performed a total of 2 changes.

5.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

5.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$868 ($adff) from module usb (D = $0\handshake_latch[1:0], Q = \handshake_latch).
Adding EN signal on $procdff$860 ($adff) from module usb (D = $procmux$716_Y, Q = \setup).
Adding EN signal on $procdff$859 ($adff) from module usb (D = $procmux$740_Y, Q = \direction_in).
Adding EN signal on $procdff$858 ($adff) from module usb (D = $procmux$764_Y, Q = \endpoint).

5.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 6 unused cells and 8 unused wires.
<suppressed ~7 debug messages>

5.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~4 debug messages>

5.15.9. Rerunning OPT passes. (Maybe there is more to do..)

5.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

5.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
    New ctrl vector for $pmux cell $flatten\recv.\sm.$procmux$322: { \recv.sm.state [0] $auto$opt_reduce.cc:134:opt_mux$1316 }
    New ctrl vector for $pmux cell $procmux$486: { \state [1] $auto$opt_reduce.cc:134:opt_mux$1318 }
    New ctrl vector for $pmux cell $procmux$716: $eq$./designs/usb/src/usb2p0_core.v:194$11_Y
    New ctrl vector for $pmux cell $procmux$719: { $procmux$721_CMP $procmux$720_CMP }
    New ctrl vector for $pmux cell $procmux$740: $eq$./designs/usb/src/usb2p0_core.v:194$11_Y
    New ctrl vector for $pmux cell $procmux$764: $eq$./designs/usb/src/usb2p0_core.v:194$11_Y
  Optimizing cells in module \usb.
Performed a total of 6 changes.

5.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

5.15.13. Executing OPT_DFF pass (perform DFF optimizations).

5.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

5.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.15.16. Rerunning OPT passes. (Maybe there is more to do..)

5.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

5.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.15.20. Executing OPT_DFF pass (perform DFF optimizations).

5.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.15.23. Finished OPT passes. (There is nothing left to do.)

5.16. Executing MEMORY pass.

5.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

5.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.18. Executing OPT pass (performing simple optimizations).

5.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~44 debug messages>

5.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.18.3. Executing OPT_DFF pass (perform DFF optimizations).

5.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 23 unused cells and 42 unused wires.
<suppressed ~24 debug messages>

5.18.5. Finished fast OPT passes.

5.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

5.20. Executing OPT pass (performing simple optimizations).

5.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

5.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
    Consolidated identical input bits for $mux cell $flatten\recv.\sm.$procmux$440:
      Old ports: A={ \recv.sm.shift_reg \recv.destuffer.d }, B={ 8'00000001 \recv.destuffer.d }, Y=\recv.sm.next_shift
      New ports: A=\recv.sm.shift_reg, B=8'00000001, Y=\recv.sm.next_shift [8:1]
      New connections: \recv.sm.next_shift [0] = \recv.destuffer.d
    Consolidated identical input bits for $mux cell $flatten\recv.\sm.\crc16.$procmux$257:
      Old ports: A={ $flatten\recv.\sm.\crc16.$logic_not$./designs/usb/src/usb2p0_core.v:1105$202_Y \recv.sm.crc16.r [13:2] $flatten\recv.\sm.\crc16.$logic_not$./designs/usb/src/usb2p0_core.v:1105$201_Y \recv.sm.crc16.r [0] 1'1 }, B={ \recv.sm.crc16.r [14:0] 1'0 }, Y=\recv.sm.crc16.next
      New ports: A={ $flatten\recv.\sm.\crc16.$logic_not$./designs/usb/src/usb2p0_core.v:1105$202_Y $flatten\recv.\sm.\crc16.$logic_not$./designs/usb/src/usb2p0_core.v:1105$201_Y 1'1 }, B={ \recv.sm.crc16.r [14] \recv.sm.crc16.r [1] 1'0 }, Y={ \recv.sm.crc16.next [15] \recv.sm.crc16.next [2] \recv.sm.crc16.next [0] }
      New connections: { \recv.sm.crc16.next [14:3] \recv.sm.crc16.next [1] } = { \recv.sm.crc16.r [13:2] \recv.sm.crc16.r [0] }
    Consolidated identical input bits for $mux cell $flatten\recv.\sm.\crc5.$procmux$262:
      Old ports: A={ $flatten\recv.\sm.\crc5.$logic_not$./designs/usb/src/usb2p0_core.v:1070$194_Y \recv.sm.crc5.r [0] 1'1 }, B={ \recv.sm.crc5.r [1:0] 1'0 }, Y=\recv.sm.crc5.next [2:0]
      New ports: A={ $flatten\recv.\sm.\crc5.$logic_not$./designs/usb/src/usb2p0_core.v:1070$194_Y 1'1 }, B={ \recv.sm.crc5.r [1] 1'0 }, Y={ \recv.sm.crc5.next [2] \recv.sm.crc5.next [0] }
      New connections: \recv.sm.crc5.next [1] = \recv.sm.crc5.r [0]
    Consolidated identical input bits for $mux cell $flatten\tx.$procmux$298:
      Old ports: A=3'010, B=3'110, Y=$flatten\tx.$procmux$298_Y
      New ports: A=1'0, B=1'1, Y=$flatten\tx.$procmux$298_Y [2]
      New connections: $flatten\tx.$procmux$298_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\tx.\tx_crc.$procmux$257:
      Old ports: A={ $flatten\tx.\tx_crc.$logic_not$./designs/usb/src/usb2p0_core.v:1105$202_Y \tx.tx_crc.r [13:2] $flatten\tx.\tx_crc.$logic_not$./designs/usb/src/usb2p0_core.v:1105$201_Y \tx.tx_crc.r [0] 1'1 }, B={ \tx.tx_crc.r [14:0] 1'0 }, Y=\tx.tx_crc.next
      New ports: A={ $flatten\tx.\tx_crc.$logic_not$./designs/usb/src/usb2p0_core.v:1105$202_Y $flatten\tx.\tx_crc.$logic_not$./designs/usb/src/usb2p0_core.v:1105$201_Y 1'1 }, B={ \tx.tx_crc.r [14] \tx.tx_crc.r [1] 1'0 }, Y={ \tx.tx_crc.next [15] \tx.tx_crc.next [2] \tx.tx_crc.next [0] }
      New connections: { \tx.tx_crc.next [14:3] \tx.tx_crc.next [1] } = { \tx.tx_crc.r [13:2] \tx.tx_crc.r [0] }
    Consolidated identical input bits for $pmux cell $procmux$684:
      Old ports: A=8'11010010, B=16'0101101000011110, Y=$procmux$684_Y
      New ports: A=4'1100, B=8'01100011, Y={ $procmux$684_Y [7:6] $procmux$684_Y [3:2] }
      New connections: { $procmux$684_Y [5:4] $procmux$684_Y [1:0] } = 4'0110
  Optimizing cells in module \usb.
Performed a total of 6 changes.

5.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.20.6. Executing OPT_SHARE pass.

5.20.7. Executing OPT_DFF pass (perform DFF optimizations).

5.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~1 debug messages>

5.20.10. Rerunning OPT passes. (Maybe there is more to do..)

5.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

5.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.20.14. Executing OPT_SHARE pass.

5.20.15. Executing OPT_DFF pass (perform DFF optimizations).

5.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.20.18. Rerunning OPT passes. (Maybe there is more to do..)

5.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

5.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

5.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

5.20.22. Executing OPT_SHARE pass.

5.20.23. Executing OPT_DFF pass (perform DFF optimizations).

5.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

5.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

5.20.26. Finished OPT passes. (There is nothing left to do.)

5.21. Executing TECHMAP pass (map to technology primitives).

5.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=1\Y_WIDTH=19 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
No more expansions possible.
<suppressed ~1250 debug messages>

5.22. Executing OPT pass (performing simple optimizations).

5.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~657 debug messages>

5.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~663 debug messages>
Removed a total of 221 cells.

5.22.3. Executing OPT_DFF pass (perform DFF optimizations).

5.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 13 unused cells and 831 unused wires.
<suppressed ~14 debug messages>

5.22.5. Finished fast OPT passes.

5.23. Executing ABC pass (technology mapping using ABC).

5.23.1. Extracting gate netlist of module `\usb' to `<abc-temp-dir>/input.blif'..
Extracted 985 gates and 1152 wires to a netlist network with 165 inputs and 124 outputs.

5.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:            ANDNOT cells:      232
ABC RESULTS:               MUX cells:       73
ABC RESULTS:              NAND cells:       43
ABC RESULTS:               NOR cells:       50
ABC RESULTS:               NOT cells:       43
ABC RESULTS:                OR cells:      206
ABC RESULTS:             ORNOT cells:       58
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       49
ABC RESULTS:        internal signals:      863
ABC RESULTS:           input signals:      165
ABC RESULTS:          output signals:      124
Removing temp directory.

5.24. Executing OPT pass (performing simple optimizations).

5.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.
<suppressed ~55 debug messages>

5.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

5.24.3. Executing OPT_DFF pass (perform DFF optimizations).

5.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 2 unused cells and 878 unused wires.
<suppressed ~33 debug messages>

5.24.5. Finished fast OPT passes.

5.25. Executing HIERARCHY pass (managing design hierarchy).

5.25.1. Analyzing design hierarchy..
Top module:  \usb

5.25.2. Analyzing design hierarchy..
Top module:  \usb
Removed 0 unused modules.

5.26. Printing statistics.

=== usb ===

   Number of wires:                861
   Number of wire bits:           1114
   Number of public wires:         135
   Number of public wire bits:     369
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                964
     $_ANDNOT_                     232
     $_AND_                         22
     $_DFFE_PN0N_                   17
     $_DFFE_PN0P_                   49
     $_DFFE_PN1P_                   37
     $_DFFE_PN_                     25
     $_DFFE_PP_                     16
     $_DFF_PN0_                     24
     $_DFF_PN1_                      2
     $_DFF_P_                        8
     $_MUX_                         73
     $_NAND_                        43
     $_NOR_                         40
     $_NOT_                         41
     $_ORNOT_                       58
     $_OR_                         206
     $_SDFFCE_PP0N_                  7
     $_SDFFCE_PP0P_                  1
     $_SDFFCE_PP1N_                  3
     $_SDFFE_PN0N_                   2
     $_SDFFE_PP1P_                   3
     $_XNOR_                         6
     $_XOR_                         49

5.27. Executing CHECK pass (checking for obvious problems).
checking module usb..
found and reported 0 problems.

6. Executing SHARE pass (SAT-based resource sharing).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usb.
Performed a total of 0 changes.

7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usb'.
Removed a total of 0 cells.

7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..

7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb.

7.9. Finished OPT passes. (There is nothing left to do.)

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 62 unused wires.
<suppressed ~62 debug messages>

9. Printing statistics.

=== usb ===

   Number of wires:                799
   Number of wire bits:           1025
   Number of public wires:          73
   Number of public wire bits:     280
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                964
     $_ANDNOT_                     232
     $_AND_                         22
     $_DFFE_PN0N_                   17
     $_DFFE_PN0P_                   49
     $_DFFE_PN1P_                   37
     $_DFFE_PN_                     25
     $_DFFE_PP_                     16
     $_DFF_PN0_                     24
     $_DFF_PN1_                      2
     $_DFF_P_                        8
     $_MUX_                         73
     $_NAND_                        43
     $_NOR_                         40
     $_NOT_                         41
     $_ORNOT_                       58
     $_OR_                         206
     $_SDFFCE_PP0N_                  7
     $_SDFFCE_PP0P_                  1
     $_SDFFCE_PP1N_                  3
     $_SDFFE_PN0N_                   2
     $_SDFFE_PP1P_                   3
     $_XNOR_                         6
     $_XOR_                         49

mapping tbuf

10. Executing TECHMAP pass (map to technology primitives).

10.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

11. Executing SIMPLEMAP pass (map simple cells to gate primitives).

12. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module usb..
  Treeifying 73 MUXes:
    Found tree with 1 MUXes at root $procmux$585.Y [0].
    Found tree with 1 MUXes at root $procmux$585.Y [1].
    Found tree with 1 MUXes at root $procmux$585.Y [2].
    Found tree with 1 MUXes at root $procmux$585.Y [3].
    Found tree with 1 MUXes at root $procmux$585.Y [4].
    Found tree with 1 MUXes at root $procmux$585.Y [5].
    Found tree with 1 MUXes at root $procmux$585.Y [6].
    Found tree with 2 MUXes at root $abc$4803$new_n967_.
    Found tree with 2 MUXes at root $abc$4803$new_n933_.
    Found tree with 3 MUXes at root $procmux$690.Y [2].
    Found tree with 3 MUXes at root $procmux$690.Y [3].
    Found tree with 3 MUXes at root $procmux$690.Y [6].
    Found tree with 3 MUXes at root $procmux$690.Y [7].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[2].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[3].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[4].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[5].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[6].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[7].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[0].
    Found tree with 1 MUXes at root $abc$4803$flatten\tx.$procmux$280_Y[1].
    Found tree with 1 MUXes at root $abc$4803$new_n939_.
    Found tree with 2 MUXes at root $abc$4803$new_n943_.
    Found tree with 1 MUXes at root $abc$4803$new_n929_.
    Found tree with 1 MUXes at root $abc$4803$new_n743_.
    Found tree with 2 MUXes at root $abc$4803$new_n923_.
    Found tree with 1 MUXes at root $abc$4803$new_n843_.
    Found tree with 2 MUXes at root $abc$4803$new_n954_.
    Found tree with 2 MUXes at root $abc$4803$new_n870_.
    Found tree with 2 MUXes at root $abc$4803$new_n989_.
    Found tree with 1 MUXes at root $abc$4803$new_n986_.
    Found tree with 1 MUXes at root $abc$4803$new_n462_.
    Found tree with 1 MUXes at root $abc$4803$new_n873_.
    Found tree with 1 MUXes at root $abc$4803$new_n897_.
    Found tree with 1 MUXes at root $abc$4803$new_n903_.
    Found tree with 1 MUXes at root $abc$4803$new_n950_.
    Found tree with 2 MUXes at root $abc$4803$new_n875_.
    Found tree with 1 MUXes at root $abc$4803$new_n878_.
    Found tree with 1 MUXes at root $abc$4803$new_n296_.
    Found tree with 2 MUXes at root $abc$4803$new_n893_.
    Found tree with 2 MUXes at root $abc$4803$new_n884_.
    Found tree with 2 MUXes at root $abc$4803$new_n900_.
    Found tree with 1 MUXes at root $abc$4803$new_n1020_.
    Found tree with 1 MUXes at root $abc$4803$new_n1022_.
    Found tree with 1 MUXes at root $abc$4803$new_n1029_.
    Found tree with 1 MUXes at root $abc$4803$new_n867_.
    Found tree with 1 MUXes at root $abc$4803$new_n963_.
    Found tree with 2 MUXes at root $abc$4803$new_n912_.
    Found tree with 1 MUXes at root $abc$4803$new_n973_.
    Found tree with 1 MUXes at root $abc$4803$new_n891_.
    Found tree with 2 MUXes at root $abc$4803$new_n976_.
    Found tree with 1 MUXes at root $abc$4803$new_n984_.
    Finished treeification: Found 52 trees.
  Covering trees:
    Replaced tree at $procmux$585.Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$585.Y [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n967_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n933_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$690.Y [2]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$690.Y [3]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$690.Y [6]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $procmux$690.Y [7]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$flatten\tx.$procmux$280_Y[1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n939_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n943_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n929_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n743_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n923_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n843_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n954_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n870_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n989_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n986_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n462_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n873_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n897_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n903_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n950_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n875_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n878_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n296_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n893_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n884_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n900_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n1020_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n1022_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n1029_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n867_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n963_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n912_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n973_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n891_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n976_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$4803$new_n984_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 0 decoder MUXes.
<suppressed ~1229 debug messages>

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

14. Executing SIMPLEMAP pass (map simple cells to gate primitives).

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX_'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
Using template \$_MUX_ for cells of type $_MUX_.
No more expansions possible.
<suppressed ~76 debug messages>

16. Executing SIMPLEMAP pass (map simple cells to gate primitives).

17. Executing TECHMAP pass (map to technology primitives).

17.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18. Executing SIMPLEMAP pass (map simple cells to gate primitives).

19. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

19.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\usb':
  mapped 90 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 39 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
  mapped 65 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

20. Printing statistics.

=== usb ===

   Number of wires:               1271
   Number of wire bits:           1497
   Number of public wires:          73
   Number of public wire bits:     280
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1140
     $_ANDNOT_                     232
     $_AND_                         22
     $_MUX_                        176
     $_NAND_                        43
     $_NOR_                         40
     $_NOT_                         41
     $_ORNOT_                       58
     $_OR_                         206
     $_XNOR_                         6
     $_XOR_                         49
     sky130_fd_sc_hd__dfrtp_2       90
     sky130_fd_sc_hd__dfstp_2       39
     sky130_fd_sc_hd__dfxtp_2       65
     sky130_fd_sc_hd__mux2_1        73

[INFO]: ABC: WireLoad : S_4

21. Executing ABC pass (technology mapping using ABC).

21.1. Extracting gate netlist of module `\usb' to `/tmp/yosys-abc-VgDXFV/input.blif'..
Extracted 873 gates and 1117 wires to a netlist network with 242 inputs and 251 outputs.

21.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-VgDXFV/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-VgDXFV/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-VgDXFV/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/usb/runs/28-01_06-18/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.12 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/usb/runs/28-01_06-18/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.16 sec
ABC: Memory =    7.77 MB. Time =     0.16 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/usb/runs/28-01_06-18/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/usb/runs/28-01_06-18/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 12550.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 12550.0 
ABC: + buffer -N 6 -S 1255.0000000000002 
ABC: Node 611 has dup fanin 167.
ABC: Node 611 has dup fanin 196.
ABC: Node 611 has dup fanin 167.
ABC: Node 611 has dup fanin 196.
ABC: Node 613 has dup fanin 161.
ABC: Node 613 has dup fanin 199.
ABC: Node 613 has dup fanin 161.
ABC: Node 613 has dup fanin 199.
ABC: Node 672 has dup fanin 147.
ABC: Node 672 has dup fanin 587.
ABC: Node 672 has dup fanin 147.
ABC: Node 672 has dup fanin 587.
ABC: Node 699 has dup fanin 65.
ABC: Node 699 has dup fanin 698.
ABC: Node 699 has dup fanin 65.
ABC: Node 699 has dup fanin 698.
ABC: Node 706 has dup fanin 697.
ABC: Node 706 has dup fanin 697.
ABC: Node 723 has dup fanin 46.
ABC: Node 723 has dup fanin 673.
ABC: Node 723 has dup fanin 46.
ABC: Node 723 has dup fanin 673.
ABC: Node 729 has dup fanin 52.
ABC: Node 729 has dup fanin 698.
ABC: Node 729 has dup fanin 52.
ABC: Node 729 has dup fanin 698.
ABC: Node 743 has dup fanin 693.
ABC: Node 743 has dup fanin 693.
ABC: Node 808 has dup fanin 95.
ABC: Node 808 has dup fanin 805.
ABC: Node 808 has dup fanin 95.
ABC: Node 808 has dup fanin 805.
ABC: Node 831 has dup fanin 105.
ABC: Node 831 has dup fanin 784.
ABC: Node 831 has dup fanin 105.
ABC: Node 831 has dup fanin 784.
ABC: Node 837 has dup fanin 108.
ABC: Node 837 has dup fanin 109.
ABC: Node 837 has dup fanin 108.
ABC: Node 837 has dup fanin 109.
ABC: Node 846 has dup fanin 113.
ABC: Node 846 has dup fanin 219.
ABC: Node 846 has dup fanin 113.
ABC: Node 846 has dup fanin 219.
ABC: Node 999 has dup fanin 185.
ABC: Node 999 has dup fanin 625.
ABC: Node 999 has dup fanin 185.
ABC: Node 999 has dup fanin 625.
ABC: + upsize -D 12550.0 
ABC: Current delay (4061.64 ps) does not exceed the target delay (12550.00 ps). Upsizing is not performed.
ABC: + dnsize -D 12550.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    595 ( 32.4 %)   Cap = 10.4 ff (  5.5 %)   Area =     4460.53 ( 67.4 %)   Delay =  4268.18 ps  (  3.9 %)               
ABC: Path  0 --     108 : 0    4 pi                       A =   0.00  Df =  16.8  -11.2 ps  S =  31.3 ps  Cin =  0.0 ff  Cout =  14.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     791 : 3    3 sky130_fd_sc_hd__or3_2   A =   7.51  Df = 504.0 -356.5 ps  S = 104.3 ps  Cin =  1.5 ff  Cout =  10.8 ff  Cmax = 310.4 ff  G =  677  
ABC: Path  2 --     792 : 2    5 sky130_fd_sc_hd__or2_2   A =   6.26  Df = 847.2 -542.0 ps  S = 102.2 ps  Cin =  1.5 ff  Cout =  17.9 ff  Cmax = 299.4 ff  G = 1171  
ABC: Path  3 --     793 : 3    4 sky130_fd_sc_hd__or3_2   A =   7.51  Df =1306.8 -851.5 ps  S = 104.2 ps  Cin =  1.5 ff  Cout =  11.2 ff  Cmax = 310.4 ff  G =  697  
ABC: Path  4 --     794 : 3    4 sky130_fd_sc_hd__or3_2   A =   7.51  Df =1778.1-1180.9 ps  S = 109.5 ps  Cin =  1.5 ff  Cout =  12.6 ff  Cmax = 310.4 ff  G =  791  
ABC: Path  5 --     795 : 4    3 sky130_fd_sc_hd__or4_2   A =   8.76  Df =2359.2-1632.7 ps  S = 120.1 ps  Cin =  1.5 ff  Cout =   7.9 ff  Cmax = 310.4 ff  G =  503  
ABC: Path  6 --     796 : 4    3 sky130_fd_sc_hd__or4_2   A =   8.76  Df =2963.6-2103.5 ps  S = 132.8 ps  Cin =  1.5 ff  Cout =  11.2 ff  Cmax = 310.4 ff  G =  711  
ABC: Path  7 --     797 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =3275.7-2301.9 ps  S =  62.3 ps  Cin =  1.5 ff  Cout =   5.6 ff  Cmax = 299.4 ff  G =  365  
ABC: Path  8 --     798 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =3584.9-2483.6 ps  S =  79.0 ps  Cin =  1.5 ff  Cout =  11.8 ff  Cmax = 299.4 ff  G =  772  
ABC: Path  9 --     802 : 2    2 sky130_fd_sc_hd__nor2_2  A =   6.26  Df =3674.3-2537.1 ps  S =  73.0 ps  Cin =  4.4 ff  Cout =   3.7 ff  Cmax = 141.9 ff  G =   79  
ABC: Path 10 --     803 : 1    6 sky130_fd_sc_hd__buf_1   A =   3.75  Df =4082.0-2705.9 ps  S = 507.4 ps  Cin =  2.1 ff  Cout =  43.0 ff  Cmax = 130.0 ff  G = 1988  
ABC: Path 11 --     805 : 3    1 sky130_fd_sc_hd__o21ai_2 A =   8.76  Df =4268.2 -624.1 ps  S = 239.7 ps  Cin =  4.5 ff  Cout =  17.6 ff  Cmax = 139.2 ff  G =  388  
ABC: Start-point = pi107 (\recv.reset_detect.cntr [1]).  End-point = po80 ($auto$rtlil.cc:2290:MuxGate$5828).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  242/  251  lat =    0  nd =   595  edge =   1582  area =4460.27  delay =12.00  lev = 12
ABC: + write_blif /tmp/yosys-abc-VgDXFV/output.blif 

21.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:       84
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      129
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       31
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        1
ABC RESULTS:        internal signals:      624
ABC RESULTS:           input signals:      242
ABC RESULTS:          output signals:      251
Removing temp directory.

22. Executing SETUNDEF pass (replace undef values with defined constants).

23. Executing HILOMAP pass (mapping to constant drivers).

24. Executing SPLITNETS pass (splitting up multi-bit signals).

25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usb..
Removed 0 unused cells and 1449 unused wires.
<suppressed ~57 debug messages>

26. Executing INSBUF pass (insert buffer cells for connected wires).

27. Executing CHECK pass (checking for obvious problems).
checking module usb..
Warning: Wire usb.\usb_rst is used but has no driver.
Warning: Wire usb.\tx_se0 is used but has no driver.
Warning: Wire usb.\tx_j is used but has no driver.
Warning: Wire usb.\tx_en is used but has no driver.
Warning: Wire usb.\transaction_active is used but has no driver.
Warning: Wire usb.\success is used but has no driver.
Warning: Wire usb.\setup is used but has no driver.
Warning: Wire usb.\endpoint [3] is used but has no driver.
Warning: Wire usb.\endpoint [2] is used but has no driver.
Warning: Wire usb.\endpoint [1] is used but has no driver.
Warning: Wire usb.\endpoint [0] is used but has no driver.
Warning: Wire usb.\direction_in is used but has no driver.
Warning: Wire usb.\data_strobe is used but has no driver.
Warning: Wire usb.\data_out [7] is used but has no driver.
Warning: Wire usb.\data_out [6] is used but has no driver.
Warning: Wire usb.\data_out [5] is used but has no driver.
Warning: Wire usb.\data_out [4] is used but has no driver.
Warning: Wire usb.\data_out [3] is used but has no driver.
Warning: Wire usb.\data_out [2] is used but has no driver.
Warning: Wire usb.\data_out [1] is used but has no driver.
Warning: Wire usb.\data_out [0] is used but has no driver.
found and reported 21 problems.

28. Printing statistics.

=== usb ===

   Number of wires:                861
   Number of wire bits:            885
   Number of public wires:         200
   Number of public wire bits:     224
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                862
     sky130_fd_sc_hd__a211o_2        1
     sky130_fd_sc_hd__a211oi_2       2
     sky130_fd_sc_hd__a21bo_2        1
     sky130_fd_sc_hd__a21boi_2       5
     sky130_fd_sc_hd__a21o_2         5
     sky130_fd_sc_hd__a21oi_2        6
     sky130_fd_sc_hd__a221o_2        5
     sky130_fd_sc_hd__a22o_2        84
     sky130_fd_sc_hd__a2bb2o_2      10
     sky130_fd_sc_hd__a2bb2oi_2      4
     sky130_fd_sc_hd__a31o_2         6
     sky130_fd_sc_hd__a31oi_2        1
     sky130_fd_sc_hd__a32o_2        14
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2         3
     sky130_fd_sc_hd__and3_2         3
     sky130_fd_sc_hd__and3b_2        1
     sky130_fd_sc_hd__and4_2         2
     sky130_fd_sc_hd__and4b_2        2
     sky130_fd_sc_hd__buf_1         64
     sky130_fd_sc_hd__dfrtp_2       90
     sky130_fd_sc_hd__dfstp_2       39
     sky130_fd_sc_hd__dfxtp_2       65
     sky130_fd_sc_hd__inv_2        129
     sky130_fd_sc_hd__mux2_1        73
     sky130_fd_sc_hd__mux2_2        11
     sky130_fd_sc_hd__nand2_2        7
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nor2_2        31
     sky130_fd_sc_hd__nor2b_2        1
     sky130_fd_sc_hd__nor3_2         2
     sky130_fd_sc_hd__nor3b_2        1
     sky130_fd_sc_hd__o2111a_2       1
     sky130_fd_sc_hd__o211a_2        5
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2        14
     sky130_fd_sc_hd__o21ai_2       23
     sky130_fd_sc_hd__o21bai_2       2
     sky130_fd_sc_hd__o221a_2        9
     sky130_fd_sc_hd__o221ai_2       5
     sky130_fd_sc_hd__o22a_2        30
     sky130_fd_sc_hd__o22ai_2        4
     sky130_fd_sc_hd__o2bb2a_2       1
     sky130_fd_sc_hd__o311a_2        3
     sky130_fd_sc_hd__o31a_2         1
     sky130_fd_sc_hd__o31ai_2        2
     sky130_fd_sc_hd__o32a_2        11
     sky130_fd_sc_hd__or2_2         47
     sky130_fd_sc_hd__or3_2         14
     sky130_fd_sc_hd__or3b_2         1
     sky130_fd_sc_hd__or4_2         16
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__or4bb_2        1

   Chip area for module '\usb': 10054.643200

29. Executing Verilog backend.
Dumping module `\usb'.

Warnings: 21 unique messages, 21 total
End of script. Logfile hash: 466ed3f29b, CPU: user 3.10s system 0.13s, MEM: 46.80 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 30% 2x abc (1 sec), 16% 26x opt_expr (0 sec), ...
